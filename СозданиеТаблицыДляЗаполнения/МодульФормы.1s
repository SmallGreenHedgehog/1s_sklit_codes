Процедура Sleep(Задержка) 
   Shell=СоздатьОбъект("WScript.Shell");	
   Shell.Run("ping -n 1 127.255.255.255 -w "+СокрЛП(Задержка*1000),0,-1);
   Shell=ПолучитьПустоеЗначение(); 
КонецПроцедуры

Процедура ВывестиТаблицу(Табл, МаксСтрок=0, Отступ=0, Разделит="		")
	Перем ВывестиСтрок; 
	Перем СтрКол, К, ТипТабл, ТекТипТабл;
	
	ТекТипТабл=ТипЗначенияСтр(Табл);
	ТипТабл=?(ТекТипТабл="ТаблицаЗначений",1,?(ТекТипТабл="ИндексированнаяТаблица",2,0));
	
	Если ТипТабл>0 Тогда 
		СтрКол="";  
		Для К=1 По Отступ Цикл
			СтрКол=СтрКол+Разделит;
		КонецЦикла;
		Для К=1 По Табл.КоличествоКолонок() Цикл
			СтрКол=СтрКол+СокрЛП(?(ТипТабл=1,Табл.ПолучитьПараметрыКолонки(К),Табл.ИмяКолонки(К)))+"; ";
		КонецЦикла;
		Сообщить(СтрКол);
		
		ВывестиСтрок=?(МаксСтрок>0,Мин(МаксСтрок,Табл.КоличествоСтрок()),Табл.КоличествоСтрок());
		Для Стр=1 по ВывестиСтрок Цикл
			СтрТекст="";
			Для К=1 По Отступ Цикл
				СтрТекст=СтрТекст+Разделит;
			КонецЦикла;
			Для Кол=1 По Табл.КоличествоКолонок() Цикл
				СтрТекст=СтрТекст+СокрЛП(Табл.ПолучитьЗначение(Стр,Кол))+";";			 
			КонецЦикла;
			СтрТекст=Лев(СтрТекст,СтрДлина(СтрТекст)-1);
			Сообщить(СтрТекст); 	
			
			Если ТипТабл=2 Тогда
				Если (Табл.ИмяКолонки(Кол-1)="тзПотомки") Тогда
					ВывестиТаблицу(Табл.ПолучитьЗначение(Стр,Кол-1),,Отступ+1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  
	Иначе
		Сообщить("Вывод таблицы не возможен. Переданные данные не являются таблицей. ("+ТекТипТабл+")");
	КонецЕсли;
КонецПроцедуры

Функция LeftSlashStrip(Str, Nom) //Отрезает строку начиная с определенного вхождения символа "\", отсчет справа
	Перем К, Сим, РезСтр;
	К=0;
	Длин=СтрДлина(Str);	
	Сим=Длин;
	Пока Сим>0 Цикл
		Сим=Сим-1;
		Если Сред(Str,Сим,1)="\" Тогда
			К=К+1;
			Если К=Nom Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;       		
	КонецЦикла;
	РезСтр=Лев(Str, Сим-1);
	
	Возврат РезСтр;
КонецФункции

Функция СкопироватьФайл(ИмяФайла, Назначение)
	Перем Успех, УспехВремПереим,ВремФайл;
	
	Успех=0;
	Если ФС.СуществуетФайл(ИмяФайла)=1 Тогда
		ВремФайл=LeftSlashStrip(ИмяФайла,1)+"\tmp";
		
		УспехВремПереим=1;
		Попытка
			ФС.ПереименоватьФайл(ИмяФайла, ВремФайл,1);			
		Исключение
			УспехВремПереим=0;
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		Если УспехВремПереим=1 Тогда
			Успех=1;
			Попытка
				ФС.КопироватьФайл(ВремФайл, Назначение,0);			
			Исключение
				Успех=0;
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;		
		ФС.ПереименоватьФайл(ВремФайл,ИмяФайла,1);			
	Иначе
		Сообщить("Файл """+СокрЛП(ИмяФайла)+""" не найден.");
	КонецЕсли;
	
	Возврат Успех;
КонецФункции // ПереместитьФайл

Функция ВыборФайла(Путь, ИмяРеквНаФорме="", ТекстВыбора="Выберите файл:", РаботаСОтносПутями=0, Расширение="*", РежимВыбора=0, ИмяФайлаПоУмолч="", Таймаут=30)
	Перем Кат, Фай;
	Перем Результат;
	
	Кат="";
	Фай="";   
	
	Результат=ФС.ВыбратьФайл(РежимВыбора,Фай,Кат,ТекстВыбора,"(*."+Расширение+")|*."+Расширение,,Таймаут);
	
	Если Результат=1 Тогда
		Если ИмяФайлаПоУмолч="" Тогда
			ИмяФайлаПоУмолч="def"+?(Расширение<>"*","."+Расширение,".txt");
		КонецЕсли;		
		
		Путь=Кат+?(ПустаяСтрока(СокрЛП(Фай))=1,ИмяФайлаПоУмолч,Фай);
		//Путь=?(РаботаСОтносПутями=1,ПреобразованиеОтноситПутей(Кат+?(ПустаяСтрока(СокрЛП(Фай))=1, ИмяФайлаПоУмолч,Фай)),Кат+?(ПустаяСтрока(СокрЛП(Фай))=1, ИмяФайлаПоУмолч,Фай));
		
		//Если ПустаяСтрока(ИмяРеквНаФорме)=0 Тогда
		//	Шаблон("[Форма."+ИмяРеквНаФорме+".Заголовок("""+Путь+""")]");
		//	Форма.Обновить();
		//КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // ВыборФайла
	
Процедура ВыборТаблицыАдресов()
	ВыборФайла(ТабАдресов,"ТабАдресов","Выберите путь к файлу адресов:",1,"dbf");
КонецПроцедуры // ВыборТаблицыАдресов

Процедура ОчисткаПутиКТабАдресов()
	ТабАдресов="";
КонецПроцедуры // ОчисткаПутиКТабАдресов
	
Процедура ВыборТаблицыКлиентов()
	ВыборФайла(ТабКлиентов,"ТабКлиентов","Выберите путь к файлу клиентов:",1,"dbf");
КонецПроцедуры // ВыборТаблицыКлиентов

Процедура ОчисткаПутиКТабКлиентов()
	ТабКлиентов="";
КонецПроцедуры // ОчисткаПутиКТабКлиентов

Процедура ВыборТаблицыСвязей()
	ВыборФайла(ТабСвязей,"ТабСвязей","Выберите путь к файлу связей:",1,"dbf");
КонецПроцедуры // ВыборТаблицыСвязей

Процедура ОчисткаПутиКТабСвязей()
	ТабСвязей="";
КонецПроцедуры // ОчисткаПутиКТабСвязей

Процедура ВыборТаблицыЗаполнения()
	ВыборФайла(ТабЗаполнения,"ТабЗаполнения","Выберите путь к файлу связей:",1,"dbf",1);
КонецПроцедуры // ВыборТаблицыЗаполнения

Процедура ОчисткаПутиКТабЗаполнения()
	ТабЗаполнения="";
КонецПроцедуры // ОчисткаПутиКТабЗаполнения

Процедура СоздатьТаблицуЗаполнения()
	Перем База, Запрос, ИмяКаталога, ТекстДБФЗапроса, ТабДБФЗапроса;	
	Перем НачМил;
	Перем ИмяТабАдресов, ИмяТабКлиентов, ИмяТабСвязей;
	Перем ВсегоСтр;
	Перем МаксКолСтрВЧасти, ТекСтрВЧасти;
	Перем Часть;
	Перем СтрокВПолнКуске;
	Перем ДБФ;
	
	РасположениеФайла(ИмяКаталога,);
	ИмяКаталога=ИмяКаталога+"tmpdbftables_"+ИмяПользователя();
	
	Если Фс.СуществуетФайл(ИмяКаталога)=0 Тогда
		ФС.СоздатьКаталог(ИмяКаталога);
	КонецЕсли;	

	ИмяКаталога=ИмяКаталога+"\";
	
	СкопироватьФайл(ТабАдресов, ИмяКаталога+"Adr.dbf");
	СкопироватьФайл(ТабКлиентов, ИмяКаталога+"Client.dbf");
	СкопироватьФайл(ТабСвязей, ИмяКаталога+"Conne.dbf");	
	
	Если Фс.СуществуетФайл(ИмяКаталога+"exptmp.DBF")=1 Тогда
		ФС.УдалитьФайл(ИмяКаталога+"exptmp.DBF");
	КонецЕсли;
	
	ТабДБФЗапроса=СоздатьОбъект("ТаблицаЗначений");
	
	База = СоздатьОбъект("OLEDBData");
	Рез=База.Connect("Provider=VFPOLEDB.1;Data Source="+ИмяКаталога+";Mode=ReadWrite;Collating Sequence=MACHINE");
	Если Рез=1 Тогда
		Запрос = База.СоздатьКоманду();
		
		//Запрос.Отладка(1);
		
		НеобходКолПопыт=5;
		ТекПопыт=0;
		Успех=0;        
		Пока (ТекПопыт<НеобходКолПопыт) и (Успех=0) Цикл
			ТекПопыт=ТекПопыт+1;
			Успех=1;
			Попытка				
				Запрос.ВыполнитьИнструкцию("CREATE TABLE exptmp (Id_Cl Integer (4,0), Id_GRP Integer (4,0), NameAdr Character (254,0))");
			Исключение
				Успех=0; 
				Сообщить(ОписаниеОшибки());
				Sleep(1);			
			КонецПопытки;
		КонецЦикла; 
		
		Если Успех=1 Тогда		
			НачМил=_GetPerformanceCounter();		
			ТекстДБФЗапроса = "
			|INSERT INTO exptmp (Id_Cl, Id_GRP, NameAdr)
			|SELECT 
			//|TOP 100
			|	Conne.ID_CL,
			|	Conne.ID_GRP,
			|	LTRIM(RTRIM(Client.NAME_CL))+' , '+LTRIM(RTRIM(Adr.FULL_ADDR)) as NameAdr
			|FROM
			|	Conne
			|INNER JOIN
			|	Client on Client.ID_CL=Conne.ID_CL
			|INNER JOIN
			|	Adr on Adr.ID_GRP=Conne.ID_GRP
			|WHERE
			|	Conne.ID_GRP>9997
			|GROUP by
			|	Conne.ID_CL,
			|	Conne.ID_GRP,
			|	Client.NAME_CL,
			|	Adr.FULL_ADDR
			|";
			
			//Запрос.Отладка(1);	
			
			ТекПопыт=0;
			Успех=0;        
			Пока (ТекПопыт<НеобходКолПопыт) и (Успех=0) Цикл
				ТекПопыт=ТекПопыт+1;
				Успех=1;
				Попытка
					Запрос.ВыполнитьИнструкцию(ТекстДБФЗапроса);
				Исключение
					Успех=0; 
					Сообщить(ОписаниеОшибки());
					Sleep(1);			
				КонецПопытки;
			КонецЦикла; 			
			//Сообщить("Выполнено за "+СокрЛП(_GetPerformanceCounter()-НачМил)+" миллисекунд");
		КонецЕсли;
		Запрос=ПолучитьПустоеЗначение();
	КонецЕсли;
	
	База.Close();
	Рез=ПолучитьПустоеЗначение();
	База=ПолучитьПустоеЗначение();	
		
КонецПроцедуры // СоздатьТаблицуЗаполнения

Процедура СтартСоздания()
	Перем ВсеТабУказаны, НеобхСоздания;
	Перем ИмяКаталога;
	
	
	ВсеТабУказаны=0;
	Если (ФС.СуществуетФайл(ТабАдресов)=1) и (ФС.СуществуетФайл(ТабКлиентов)=1) и (ФС.СуществуетФайл(ТабСвязей)=1) Тогда
		Если ПустаяСтрока(СокрЛП(ТабЗаполнения))=0 Тогда
			ВсеТабУказаны=1;
		КонецЕсли;
	КонецЕсли;
	
	Если ВсеТабУказаны=1 Тогда
			СоздатьТаблицуЗаполнения();
			
			РасположениеФайла(ИмяКаталога,);
			ИмяКаталога=ИмяКаталога+"tmpdbftables_"+ИмяПользователя();
			ИмяКаталога=ИмяКаталога+"\";

			Если ФС.СуществуетФайл(ИмяКаталога+"exptmp.dbf")=1 Тогда
				ФС.ПереименоватьФайл(ИмяКаталога+"exptmp.dbf",ТабЗаполнения,1);				
				Сообщить("Выполнение обработки завершено.");
			КонецЕсли;
	КонецЕсли;
КонецПроцедуры // СоздатьТаблицуЗаполнения